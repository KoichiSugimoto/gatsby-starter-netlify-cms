// @import "compass";
@charset "utf-8";
@import '../base/_valiables.scss';

// braakpoint settings ------------------------------
@mixin bp($bp_1: 0, $bp_2: 0) {
    $bp_main: 420;
    $bp_sub: 768;
    @if $bp_1== 'sp' {
        @media (max-width: #{$bp_main}px) {
            @content;
        }
    }
    @elseif $bp_1=='tab' {
        @media (max-width: #{$bp_sub}px) {
            @content;
        }
    }
    @elseif $bp_1=='pc' {
        @media (min-width: #{$bp_sub + 1}px) {
            @content;
        }
    }
    @elseif $bp_1=='ls' {
        @media (orientation: landscape) {
            @content;
        }
    }
    @elseif $bp_1=='pt' {
        @media (orientation: portrait) {
            @content;
        }
    } @else {
        @if $bp_1 !=0 and $bp_2 !=0 {
            @media (min-width: $bp_1) and (max-width: $bp_2) {
                @content;
            }
        }
        @elseif $bp_1==0 {
            @media (max-width: $bp_2) {
                @content;
            }
        }
        @elseif $bp_2==0 {
            @media (min-width: $bp_1) {
                @content;
            }
        }
    }
}

// common mixins ------------------------------
@mixin clearfix {
    &:after {
        content: '';
        display: block;
        clear: both;
    }
}

@mixin fs($fontsize: 16, $lineheight: 26, $base: 16) {
    font-size: $fontsize + px;
    font-size: ($fontsize / $base) * 1rem;
    line-height: ceil($lineheight * 1000 / $fontsize) / 1000;
}
@mixin fs-vw($fontsize: 16, $lineheight: 26, $area-width: 320) {
    font-size: #{($fontsize / $area-width) * 100}vw;
    line-height: ceil($lineheight * 1000 / $fontsize) / 1000;
}
@mixin fontanti {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin backgroundsize($w: auto, $h: auto) {
    -webkit-background-size: $w $h;
    background-size: $w $h;
}
@mixin transition($options: 0.2s all ease) {
    -webkit-transition: ($options);
    transition: ($options);
}
@mixin transform($options) {
    -webkit-transform: ($options);
    transform: ($options);
}
@mixin animation($options) {
    -webkit-animation: ($options);
    animation: ($options);
}

@mixin hover-op {
    @include transition(0.2s opacity);

    &:hover {
        @include opacity(0.75);
    }
}
@mixin hover-color($color: $color_point) {
    .pc & {
        @include transition(0.2s color ease);

        &:hover {
            color: $color;
        }
    }
}
@mixin hover-bgcolor($color: $color_point) {
    .pc & {
        @include transition(0.2s background-color ease);

        &:hover {
            background-color: $color;
        }
    }
}
@mixin fieldstyle-reset {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    color: $color-font-base;
    font-size: inherit;
    font-family: $font-family-base;
    vertical-align: middle;
    background: transparent;
    border: 0;
    border-radius: 0;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
}
@mixin coverAll($pos: absolute) {
    position: $pos;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
@mixin posCenter() {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
}
@mixin posCenterV() {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    @include transform(translateY(-50%));
}
@mixin bgContain() {
    background: no-repeat center center;
    background-size: contain;
}
@mixin bgCover() {
    background: no-repeat center center;
    background-size: cover;
}

@mixin background-gradient($color_1, $color_2) {
    background: $color_1;
    background: -moz-linear-gradient(left, $color_1 0%, $color_2 100%);
    background: -webkit-linear-gradient(left, $color_1 0%, $color_2 100%);
    background: linear-gradient(
        to right,
        $color_1 0%,
        $color_1 0%,
        $color_2 100%
    );
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$color_1', endColorstr='$color_2',GradientType=1 );
}
@mixin block($w: 100%) {
    float: left;
    width: $w;
}
@mixin position($p, $top, $right, $bottom, $left, $zindex: 1) {
    position: $p;
    @if $top != '' {
        top: $top;
    }
    @if $right != '' {
        right: $right;
    }
    @if $bottom != '' {
        bottom: $bottom;
    }
    @if $left != '' {
        left: $left;
    }
    z-index: $zindex;
}
@mixin font($size: 0, $fw: 0, $color: 0, $under: 0, $up: 0, $line: 0) {
    @if $size != 0 {
        font-size: $size;
    }
    @if $fw != 0 {
        font-weight: $fw;
    }
    @if $color != 0 {
        color: $color;
    }
    @if $under != 0 {
        text-decoration: underline;
    }
    @if $up != 0 {
        text-transform: uppercase;
    }
    @if $line != 0 {
        line-height: $line;
    }
}
.only-pc {
    @include bp(tab) {
        display: none !important;
    }
}

.only-sp {
    @include bp(pc) {
        display: none !important;
    }
}
